#!/usr/bin/env python3
# from typing import *
from collections import defaultdict


# def solve(N: int, K: int, A: List[int]) -> int:
def solve(N, K, A):
    S = [0 for i in range(N + 1)]
    for i in range(N):
        # print(i)
        S[i+1] = S[i] + A[i]
    # print(S)
    ans = 0
    di = defaultdict(int)
    # di[0] = 1
    for i in range(N+1):
        ans += di[S[i] - K]
        di[S[i]] += 1
    # print(di)
    return ans


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    K = int(next(tokens))
    A = [None for _ in range(N)]
    for i in range(N):
        A[i] = int(next(tokens))
    assert next(tokens, None) is None
    a = solve(N, K, A)
    print(a)


if __name__ == '__main__':
    main()
